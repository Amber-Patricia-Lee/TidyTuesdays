{"frames":[{"func":"(function (x, ...) \nUseMethod(\"print\"))(x)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"print.tmap(x)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"print_tmap(x = x, vp = vp, return.asp = return.asp, mode = mode, \n    show = show, knit = knit, options = options, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"process_tm(x, gt, gm, interactive)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"mapply(FUN = process_layers, gs, cnlx, MoreArgs = list(gt = gt, \n    gf = gf, interactive = interactive), SIMPLIFY = FALSE)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"(function (g, z, gt, gf, interactive) \n{\n    if (dupl <- anyDuplicated(names(g))) {\n        if (gt$show.warnings)  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"process_fill(data, g$tm_fill, gt, gf, z = z + which(plot.order == \n    \"tm_fill\"), interactive = interactive)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"process_aes(type = \"fill\", xs, \"xfill\", \"fill\", data, g, gt, \n    gby, z, interactive)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"check_g(g, gt)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(\"alpha argument in tm_XXX is not a numeric\", call. = FALSE)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error: alpha argument in tm_XXX is not a numeric\n"}